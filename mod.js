// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var r="function"==typeof Object.defineProperty?Object.defineProperty:null;var e,t=Object.defineProperty,n=Object.prototype,o=n.toString,a=n.__defineGetter__,u=n.__defineSetter__,i=n.__lookupGetter__,l=n.__lookupSetter__;e=function(){try{return r({},"x",{}),!0}catch(r){return!1}}()?t:function(r,e,t){var f,c,_,p;if("object"!=typeof r||null===r||"[object Array]"===o.call(r))throw new TypeError("invalid argument. First argument must be an object. Value: `"+r+"`.");if("object"!=typeof t||null===t||"[object Array]"===o.call(t))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+t+"`.");if((c="value"in t)&&(i.call(r,e)||l.call(r,e)?(f=r.__proto__,r.__proto__=n,delete r[e],r[e]=t.value,r.__proto__=f):r[e]=t.value),_="get"in t,p="set"in t,c&&(_||p))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return _&&a&&a.call(r,e,t.get),p&&u&&u.call(r,e,t.set),r};var f=e;var c=Math.floor;function _(r,e,t,n,o){var a,u,i,l,f,p,b,y,v,d,s,j,g,m;if(r<=0)return e;if(1===r||0===n)return function(r){return r!=r}(t[o])||(e[0]+=t[o],e[1]+=1),e;if(a=o,r<8){for(s=0,j=0,m=0;m<r;m++)(g=t[a])==g&&(s+=g,j+=1),a+=n;return e[0]+=s,e[1]+=j,e}if(r<=128){for(u=0,i=0,l=0,f=0,p=0,b=0,y=0,v=0,j=0,d=r%8,m=0;m<r-d;m+=8)(g=t[a])==g&&(u+=g,j+=1),(g=t[a+=n])==g&&(i+=g,j+=1),(g=t[a+=n])==g&&(l+=g,j+=1),(g=t[a+=n])==g&&(f+=g,j+=1),(g=t[a+=n])==g&&(p+=g,j+=1),(g=t[a+=n])==g&&(b+=g,j+=1),(g=t[a+=n])==g&&(y+=g,j+=1),(g=t[a+=n])==g&&(v+=g,j+=1),a+=n;for(s=u+i+(l+f)+(p+b+(y+v));m<r;m++)(g=t[a])==g&&(s+=g,j+=1),a+=n;return e[0]+=s,e[1]+=j,e}return j=c(r/2),_(j-=j%8,e,t,n,a)+_(r-j,e,t,n,a+j*n)}var p=[0,0];function b(r,e,t,n){return p[0]=0,p[1]=0,_(r,p,e,t,n),p[0]/p[1]}function y(r,e,t){var n,o,a,u,i;if(r<=0)return NaN;if(1===r||0===t)return e[0];if(n=t<0?(1-r)*t:0,r<8){for(a=0,u=0,i=0;i<r;i++)(o=e[n])==o&&(a+=o,u+=1),n+=t;return 0===u?NaN:a/u}return b(r,e,t,n)}f(y,"ndarray",{configurable:!1,enumerable:!1,writable:!1,value:b});export{y as default,b as ndarray};
//# sourceMappingURL=mod.js.map
