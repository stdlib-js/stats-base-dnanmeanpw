// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
var e,r;e=this,r=function(){"use strict";var e="function"==typeof Object.defineProperty?Object.defineProperty:null,r=function(){try{return e({},"x",{}),!0}catch(e){return!1}},t=Object.defineProperty,n=Object.prototype,o=n.toString,i=n.__defineGetter__,u=n.__defineSetter__,a=n.__lookupGetter__,f=n.__lookupSetter__,l=t,c=function(e,r,t){var l,c,p,_;if("object"!=typeof e||null===e||"[object Array]"===o.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof t||null===t||"[object Array]"===o.call(t))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+t+"`.");if((c="value"in t)&&(a.call(e,r)||f.call(e,r)?(l=e.__proto__,e.__proto__=n,delete e[r],e[r]=t.value,e.__proto__=l):e[r]=t.value),p="get"in t,_="set"in t,c&&(p||_))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return p&&i&&i.call(e,r,t.get),_&&u&&u.call(e,r,t.set),e},p=r()?l:c,_=function(e,r,t){p(e,r,{configurable:!1,enumerable:!1,writable:!1,value:t})},d=function(e){return e!=e},b=Math.floor;function y(e,r,t,n,o){var i,u,a,f,l,c,p,_,s,v,m,j,g,h;if(e<=0)return r;if(1===e||0===n)return d(t[o])||(r[0]+=t[o],r[1]+=1),r;if(i=o,e<8){for(m=0,j=0,h=0;h<e;h++)(g=t[i])==g&&(m+=g,j+=1),i+=n;return r[0]+=m,r[1]+=j,r}if(e<=128){for(u=0,a=0,f=0,l=0,c=0,p=0,_=0,s=0,j=0,v=e%8,h=0;h<e-v;h+=8)(g=t[i])==g&&(u+=g,j+=1),(g=t[i+=n])==g&&(a+=g,j+=1),(g=t[i+=n])==g&&(f+=g,j+=1),(g=t[i+=n])==g&&(l+=g,j+=1),(g=t[i+=n])==g&&(c+=g,j+=1),(g=t[i+=n])==g&&(p+=g,j+=1),(g=t[i+=n])==g&&(_+=g,j+=1),(g=t[i+=n])==g&&(s+=g,j+=1),i+=n;for(m=u+a+(f+l)+(c+p+(_+s));h<e;h++)(g=t[i])==g&&(m+=g,j+=1),i+=n;return r[0]+=m,r[1]+=j,r}return j=b(e/2),y(j-=j%8,r,t,n,i)+y(e-j,r,t,n,i+j*n)}var s=[0,0];function v(e,r,t,n){return s[0]=0,s[1]=0,y(e,s,r,t,n),s[0]/s[1]}function m(e,r,t){var n,o,i,u,a;if(e<=0)return NaN;if(1===e||0===t)return r[0];if(n=t<0?(1-e)*t:0,e<8){for(i=0,u=0,a=0;a<e;a++)(o=r[n])==o&&(i+=o,u+=1),n+=t;return 0===u?NaN:i/u}return v(e,r,t,n)}return _(m,"ndarray",v),m},"object"==typeof exports&&"undefined"!=typeof module?module.exports=r():"function"==typeof define&&define.amd?define(r):(e="undefined"!=typeof globalThis?globalThis:e||self).dnanmeanpw=r();
//# sourceMappingURL=index.js.map
